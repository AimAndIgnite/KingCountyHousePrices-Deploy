# -*- coding: utf-8 -*-
"""King County House Prices Deploy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ODP911mLEgbpaGo6HPbQ2u3UeKYgPz91
"""

# !pip install streamlit

import streamlit as st
import pandas as pd
# from sklearn.preprocessing import  LabelEncoder
import xgboost as xgb
import numpy as np
import pickle
from sklearn.model_selection import train_test_split 

st.header("House Price Prediction App (King County)")
# st.text_input("Enter your Name: ", key="name")
data = pd.read_csv("https://raw.githubusercontent.com/AimAndIgnite/datasets/main/kc_house_data.csv")

if st.checkbox('Show dataframe'):
    data
    
# xgb_model = xgb.XGBRegressor()
# xgb_model.load_model("model_sf.json")
# xgb_model = pickle.load(open("finalized_model.pkl", "rb"))

X = data[["bathrooms", "bedrooms", "sqft_living", "sqft_above"]]
y = data["price"]

X_train, X_test, y_train, y_test = train_test_split(X.values, y.values, test_size=0.3, shuffle=False, random_state=1)

if st.button("Train Model"):
    xgb_model = xgb.XGBRegressor()
    xgb_model.fit(X_train, y_train)
    predictions = xgb_model.predict(X_test)

st.subheader("Please select relevant features of your house:")

# input_bathrooms = st.slider('Number of bathrooms', 0.0, max(data["bathrooms"]), 1.0)
# input_bedrooms = st.slider('Number of bedrooms', 0.0, max(data["bedrooms"]), 1.0)
# input_sqft_living = st.slider('Total living space (in square foot)', 0.0, max(data["sqft_living"]), 1.0)
# input_sqft_above = st.slider('Total space (in square foot)', 0.0, max(data["sqft_above"]), 1.0)

input_bathrooms = st.number_input("Input number of bathroom(s)", min_value=1, max_value=100, step=1)
input_bedrooms = st.number_input("Input number of bedroom(s)", min_value=1, max_value=100, step=1)
input_sqft_living = st.number_input("Input total area of living space (square feet)", min_value=1, max_value=13000, step=1000)
input_sqft_living = st.number_input("Input total area of property (square feet)", min_value=1, max_value=13000, step=1000)

if st.button('Make Prediction'):
    prediction = xgb_model.predict(input_bathrooms, input_bedrooms, input_sqft_living, input_sqft_above)
    print("final pred", np.squeeze(prediction, -1))
    st.write(f"Predicted price: ${np.squeeze(prediction, -1)}")
